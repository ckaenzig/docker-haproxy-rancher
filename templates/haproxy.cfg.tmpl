global
    log /dev/log local1
    log /dev/log local2 debug

    # set default parameters to the intermediate configuration
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy-1.7.2&openssl=1.0.1t&hsts=yes&profile=intermediate
    # set default parameters to the intermediate configuration
    tune.ssl.default-dh-param 2048
    tune.ssl.cachesize 50000
    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    ssl-default-bind-options no-sslv3 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    ssl-default-server-options no-sslv3 no-tls-tickets

defaults
    log global
    mode http
    option httplog
    timeout connect 5s
    timeout client  20s
    timeout server  30s
    timeout http-request 10s
    timeout http-keep-alive 5s
    timeout check   2s

resolvers rancher
    nameserver dnsmasq 169.254.169.250:53

listen stats
    bind *:8008
    stats enable
    stats uri /stats

frontend 80
    bind *:80
    redirect scheme https code 301

frontend 443
    bind *:443 ssl crt /usr/local/etc/haproxy/certs/
    use_backend varnish if { srv_is_up(varnish/cache) }
    default_backend sorry_page

backend varnish
    server cache 127.0.0.1:6083 send-proxy inter 2000 rise 2 fall 3 check

frontend 8080
    bind *:8080
{{- range $stack := ls "/stacks" }}
  {{- range $service := ls (printf "/stacks/%s/services" $stack) }}
    {{- if (exists (printf "/stacks/%s/services/%s/labels/lb.enable" $stack $service)) }}
      {{- $servername := getv (printf "/stacks/%s/services/%s/labels/lb.enable" $stack $service) }}
      {{- $servernames := split $servername "," }}
    acl 8080_{{ $stack }}_{{ $service }}_host hdr_beg(host) -i {{ join $servernames " or hdr_beg(host) -i " }}
      {{- if (and (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.host" $stack $service)) (and (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.url" $stack $service)) (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.value" $stack $service)))) }}
        {{- $value := getv (printf "/stacks/%s/services/%s/labels/lb.semaphore.value" $stack $service) }}
    use_backend 8080_{{ $stack }}_{{ $service }} if { srv_is_up(8080_{{ $stack }}_{{ $service }}_{{ $value }}_mode/semaphore) } 8080_{{ $stack }}_{{ $service }}_host
      {{- else }}
    use_backend 8080_{{ $stack }}_{{ $service }} if 8080_{{ $stack }}_{{ $service }}_host
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

frontend backdoor_bypass_varnish
    bind    :8443 ssl crt /usr/local/etc/haproxy/certs/
{{- range $stack := ls "/stacks" }}
  {{- range $service := ls (printf "/stacks/%s/services" $stack) }}
    {{- if (exists (printf "/stacks/%s/services/%s/labels/lb.enable" $stack $service)) }}
      {{- $servername := getv (printf "/stacks/%s/services/%s/labels/lb.enable" $stack $service) }}
      {{- $servernames := split $servername "," }}
    acl 8080_{{ $stack }}_{{ $service }}_host hdr_beg(host) -i {{ join $servernames " or hdr_beg(host) -i " }}
      {{- if (and (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.host" $stack $service)) (and (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.url" $stack $service)) (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.value" $stack $service)))) }}
        {{- $value := getv (printf "/stacks/%s/services/%s/labels/lb.semaphore.value" $stack $service) }}
    use_backend 8080_{{ $stack }}_{{ $service }} if { srv_is_up(8080_{{ $stack }}_{{ $service }}_{{ $value }}_mode/semaphore) } 8080_{{ $stack }}_{{ $service }}_host
      {{- else }}
    use_backend 8080_{{ $stack }}_{{ $service }} if 8080_{{ $stack }}_{{ $service }}_host
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
    default_backend sorry_page


{{- range $stack := ls "/stacks" }}
  {{- range $service := ls (printf "/stacks/%s/services" $stack) }}
    {{- if (exists (printf "/stacks/%s/services/%s/labels/lb.enable" $stack $service)) }}

backend 8080_{{ $stack }}_{{ $service }}
    balance roundrobin
      {{- range $container := ls (printf "/stacks/%s/services/%s/containers" $stack $service) }}
        {{- if (not (eq "stacks" $container)) }}
          {{- $ip := getv (printf "/stacks/%s/services/%s/containers/%s/primary_ip" $stack $service $container) }}
    server {{ $container }} {{ $ip }}:80 resolvers rancher check
        {{- end }}
      {{- end }}
      {{- if (and (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.host" $stack $service)) (and (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.url" $stack $service)) (exists (printf "/stacks/%s/services/%s/labels/lb.semaphore.value" $stack $service)))) }}
        {{- $host := getv (printf "/stacks/%s/services/%s/labels/lb.semaphore.host" $stack $service) }}
        {{- $url := getv (printf "/stacks/%s/services/%s/labels/lb.semaphore.url" $stack $service) }}
        {{- $value := getv (printf "/stacks/%s/services/%s/labels/lb.semaphore.value" $stack $service) }}

backend 8080_{{ $stack }}_{{ $service }}_{{ $value }}_mode
option httpchk GET "{{ $url }}" "HTTP/1.0\r\nHost:\ {{ $host }}"
    http-check expect rstring ^{{ $value }}$
    default-server inter 5000 rise 2 fall 4 init-addr none
    server semaphore "{{ $host }}:80" resolvers rancher check
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

backend sorry_page
    http-response set-status 500
